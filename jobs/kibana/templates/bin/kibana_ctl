#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/kibana/helpers/ctl_setup.sh 'kibana'
export PIDFILE=/var/vcap/sys/run/kibana/kibana.pid

<%
  elasticsearch_port = nil
  if_link("elasticsearch") { |elasticsearch_link| elasticsearch_port = elasticsearch_link.p("elasticsearch.port") }
  unless elasticsearch_port
    elasticsearch_port = p("kibana.elasticsearch.port")
  end
%>
function wait_for_template {
  local template_name="$1"
  local MASTER_URL="<%= p("kibana.elasticsearch.host") %>:<%= elasticsearch_port %>"
  local wait=0

  set +e
  while true;  do
    echo "Waiting for index template to be uploaded: $template_name"
    curl -f -I "$MASTER_URL"/_template/$template_name > /dev/null 2>&1 && break
    if [ $wait -gt 120 ]; then
      echo $template_name not found
      exit 1
    fi
    let wait+=10
    sleep 10
  done
  echo "Found $template_name"
  set -e
}

function convert_kibana_index {
  # do the migration as per https://www.elastic.co/guide/en/kibana/6.0/migrating-6.0-index.html#migrating-6.0-index
  curl -X PUT "localhost:9200/.kibana/_settings" -H 'Content-Type: application/json' -d'{"index.blocks.write": true}'
  curl -X PUT "localhost:9200/.kibana-6" -H 'Content-Type: application/json' -d'
    {
      "settings" : {
        "number_of_shards" : 1,
        "index.mapper.dynamic": false
      },
      "mappings" : {
        "doc": {
          "properties": {
            "type": {
              "type": "keyword"
            },
            "updated_at": {
              "type": "date"
            },
            "config": {
              "properties": {
                "buildNum": {
                  "type": "keyword"
                }
              }
            },
            "index-pattern": {
              "properties": {
                "fieldFormatMap": {
                  "type": "text"
                },
                "fields": {
                  "type": "text"
                },
                "intervalName": {
                  "type": "keyword"
                },
                "notExpandable": {
                  "type": "boolean"
                },
                "sourceFilters": {
                  "type": "text"
                },
                "timeFieldName": {
                  "type": "keyword"
                },
                "title": {
                  "type": "text"
                }
              }
            },
            "visualization": {
              "properties": {
                "description": {
                  "type": "text"
                },
                "kibanaSavedObjectMeta": {
                  "properties": {
                    "searchSourceJSON": {
                      "type": "text"
                    }
                  }
                },
                "savedSearchId": {
                  "type": "keyword"
                },
                "title": {
                  "type": "text"
                },
                "uiStateJSON": {
                  "type": "text"
                },
                "version": {
                  "type": "integer"
                },
                "visState": {
                  "type": "text"
                }
              }
            },
            "search": {
              "properties": {
                "columns": {
                  "type": "keyword"
                },
                "description": {
                  "type": "text"
                },
                "hits": {
                  "type": "integer"
                },
                "kibanaSavedObjectMeta": {
                  "properties": {
                    "searchSourceJSON": {
                      "type": "text"
                    }
                  }
                },
                "sort": {
                  "type": "keyword"
                },
                "title": {
                  "type": "text"
                },
                "version": {
                  "type": "integer"
                }
              }
            },
            "dashboard": {
              "properties": {
                "description": {
                  "type": "text"
                },
                "hits": {
                  "type": "integer"
                },
                "kibanaSavedObjectMeta": {
                  "properties": {
                    "searchSourceJSON": {
                      "type": "text"
                    }
                  }
                },
                "optionsJSON": {
                  "type": "text"
                },
                "panelsJSON": {
                  "type": "text"
                },
                "refreshInterval": {
                  "properties": {
                    "display": {
                      "type": "keyword"
                    },
                    "pause": {
                      "type": "boolean"
                    },
                    "section": {
                      "type": "integer"
                    },
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "timeFrom": {
                  "type": "keyword"
                },
                "timeRestore": {
                  "type": "boolean"
                },
                "timeTo": {
                  "type": "keyword"
                },
                "title": {
                  "type": "text"
                },
                "uiStateJSON": {
                  "type": "text"
                },
                "version": {
                  "type": "integer"
                }
              }
            },
            "url": {
              "properties": {
                "accessCount": {
                  "type": "long"
                },
                "accessDate": {
                  "type": "date"
                },
                "createDate": {
                  "type": "date"
                },
                "url": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 2048
                    }
                  }
                }
              }
            },
            "server": {
              "properties": {
                "uuid": {
                  "type": "keyword"
                }
              }
            },
            "timelion-sheet": {
              "properties": {
                "description": {
                  "type": "text"
                },
                "hits": {
                  "type": "integer"
                },
                "kibanaSavedObjectMeta": {
                  "properties": {
                    "searchSourceJSON": {
                      "type": "text"
                    }
                  }
                },
                "timelion_chart_height": {
                  "type": "integer"
                },
                "timelion_columns": {
                  "type": "integer"
                },
                "timelion_interval": {
                  "type": "keyword"
                },
                "timelion_other_interval": {
                  "type": "keyword"
                },
                "timelion_rows": {
                  "type": "integer"
                },
                "timelion_sheet": {
                  "type": "text"
                },
                "title": {
                  "type": "text"
                },
                "version": {
                  "type": "integer"
                }
              }
            },
            "graph-workspace": {
              "properties": {
                "description": {
                  "type": "text"
                },
                "kibanaSavedObjectMeta": {
                  "properties": {
                    "searchSourceJSON": {
                      "type": "text"
                    }
                  }
                },
                "numLinks": {
                  "type": "integer"
                },
                "numVertices": {
                  "type": "integer"
                },
                "title": {
                  "type": "text"
                },
                "version": {
                  "type": "integer"
                },
                "wsState": {
                  "type": "text"
                }
              }
            }
          }
        }
      }
    }
  '
  curl -X POST "localhost:9200/_reindex" -H 'Content-Type: application/json' -d'
    {
      "source": {
        "index": ".kibana"
      },
      "dest": {
        "index": ".kibana-6"
      },
      "script": {
        "inline": "ctx._source = [ ctx._type : ctx._source ]; ctx._source.type = ctx._type; ctx._id = ctx._type + \":\" + ctx._id; ctx._type = \"doc\"; ",
        "lang": "painless"
      }
    }
  '
  curl -X POST "localhost:9200/_aliases" -H 'Content-Type: application/json' -d'
    {
      "actions" : [
        { "add":  { "index": ".kibana-6", "alias": ".kibana" } },
        { "remove_index": { "index": ".kibana" } }
      ]
    }
  '
}

case $1 in

  start)
    pid_guard $PIDFILE kibana

    <% p("kibana.wait_for_templates").each do |template| %>
    wait_for_template "<%= template %>"
    <% end %>

    echo $$ > $PIDFILE

    MEMORY_LIMIT=$(($(grep MemTotal /proc/meminfo | awk '{print $2}') * <%= p('kibana.memory_limit') %>/100 / 1024))
    export NODE_OPTIONS="--max-old-space-size=$MEMORY_LIMIT"

    <% p("kibana.env").each do |env| %>
    export <%= env.keys[0] %>="<%= env.values[0] %>"
    <% end %>

    <% p("kibana.source_files").each do |sf| %>
    source <%= sf %>
    <% end %>

    rm -rf /var/vcap/packages/kibana/plugins/*
    <% p("kibana.plugins").each do |plugin| name, path = plugin.first %>
      <% if path.start_with? '/var/vcap' %>
        /var/vcap/packages/kibana/bin/kibana-plugin install "file://<%= path %>"
      <% elsif path.start_with? 'http' %>
        /var/vcap/packages/kibana/bin/kibana-plugin install "<%= path %>"
      <% else %>
        /var/vcap/packages/kibana/bin/kibana-plugin install "<%= path %>"
      <% end %>
    <% end %>

    # convert index to new version
    curl -s localhost:9200/_cat/indices | awk '{print $3}'| grep .kibana-6 || convert_kibana_index

    exec /var/vcap/packages/kibana/bin/kibana \
         -c $JOB_DIR/config/kibana.conf \
         >>$LOG_DIR/kibana.stdout.log \
         2>>$LOG_DIR/kibana.stderr.log
    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: kibana_ctl {start|stop}"

    ;;

esac
